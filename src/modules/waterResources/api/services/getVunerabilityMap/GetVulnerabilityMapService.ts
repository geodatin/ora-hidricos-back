import { inject, injectable } from 'tsyringe'

import { AppError } from '@shared/errors/AppError'
import { toGeojson } from '@shared/utils/toGeojson'

import { IVulnerabilityMapsRepository } from '../../repositories/IVulnerabilityMapsRepository'

interface IRequest {
  mapType: string
}

@injectable()
export class GetVulnerabilityMapService {
  constructor(
    @inject('VulnerabilityMapsRepository')
    private VulnerabilityMapsRepository: IVulnerabilityMapsRepository
  ) {}

  async execute({ mapType }: IRequest) {
    const mapTypes = ['evapotranspiration', 'hydricBalance', 'precipitation']
    if (!mapTypes.includes(mapType)) {
      throw new AppError('Invalid Map type!')
    }
    const points = await this.VulnerabilityMapsRepository.getShape(mapType)
    const parsed = toGeojson(points)
    return parsed
  }
}
